version: '3.9'

networks:
  local:

services:

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.27.0
    environment:
      - QUERY_BASE_PATH=/jaeger
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "14250:14250"
      - "14268:14268"
      - "16686:16686"
    networks:
      - local

  # Quarkus application
  hospital-blue:
    container_name: "hospital-blue"
    image: serrodcal/hospital:1.0.0-native-distroless
    ports: 
      - "8080:8080"
    depends_on:
      - jaeger
    networks:
      - local

  # # Quarkus application
  # hospital-green:
  #   container_name: "hospital-green"
  #   image: serrodcal/hospital:1.0.0-native-distroless
  #   environment:
  #     - QUARKUS_HTTP_PORT=8081
  #   ports: 
  #     - "8081:8081"
  #   networks:
  #     - local

  # https://apim.docs.wso2.com/en/4.1.0/install-and-setup/setup/deployment-best-practices/tuning-performance/#api-m-level-settings
  # https://apim.docs.wso2.com/en/4.1.0/install-and-setup/setup/mi-setup/transport_configurations/configuring-transports/#configuring-the-httphttps-transport
  # https://github.com/wso2/micro-integrator/blob/master/distribution/src/resources/config-tool/deployment-full.toml#L174
  mi:
    container_name: "mi"
    image: docker.wso2.com/wso2mi:4.1.0
    environment:
      - JAVA_OPTS=-DenableCorrelationLogs=true -DenablePrometheusApi=true -Dcom.sun.management.jmxremote.port=9010 -Dcom.sun.management.jmxremote.rmi.port=9010 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false
    volumes:
      - ./volumes/mi/deployment.toml:/home/wso2carbon/wso2mi-4.1.0/conf/deployment.toml
      # - ./volumes/mi/log4j2.properties:/home/wso2carbon/wso2mi-4.1.0/conf/log4j2.properties
      - ./volumes/mi/api/Health.xml:/home/wso2carbon/wso2mi-4.1.0/repository/deployment/server/synapse-configs/default/api/Health.xml
      - ./volumes/mi/api/Toxi.xml:/home/wso2carbon/wso2mi-4.1.0/repository/deployment/server/synapse-configs/default/api/Toxi.xml
    ports: 
      - "8290:8290" # HTTP
      - "8253:8253" # HTTPS
      - "9010:9010" # JMX
      - "9201:9201" # Metrics
    networks:
      - local
    depends_on:
      - jaeger
      - hospital-blue

  toxiproxy:
    container_name: "toxiproxy"
    image: ghcr.io/shopify/toxiproxy:2.5.0
    command: ["-config", "/config/toxiproxy.json"]
    volumes:
      - ./volumes/toxiproxy/toxiproxy.json:/config/toxiproxy.json
    ports:
      - 25678:5678
    networks:
      - local
    depends_on:
      - hospital-blue
      - mi

  exporter:
    container_name: "exporter"
    image: sscaling/jmx-prometheus-exporter:0.12.0
    environment:
      - CONFIG_YML=/tmp/config/config.yml
    volumes:
      - ./volumes/exporter/config.yml:/tmp/config/config.yml
    ports: 
      - "5556:5556"
    depends_on:
      - jaeger
      - hospital-blue
      - mi
      - toxiproxy
    networks:
      - local

  prometheus:
    container_name: "prometheus"
    image: prom/prometheus:v2.30.0
    volumes:
      - ./volumes/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.external-url=http://localhost:9090'
    ports:
      - "9090:9090"
    depends_on:
      - jaeger
      - hospital-blue
      - mi
      - toxiproxy
      - exporter
    networks:
      - local

  grafana:
    container_name: "grafana"
    image: grafana/grafana:8.1.3
    #user: "grafana"
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - ./volumes/grafana/dashboard.json:/var/lib/grafana/dashboards/dashboard.json
      - ./volumes/grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./volumes/grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
    depends_on:
      - jaeger
      - hospital-blue
      - mi
      - toxiproxy
      - exporter
      - prometheus
    networks:
      - local
  
version: '3.9'

networks:
  local:

services:

  # jaeger:
  #   container_name: jaeger
  #   image: jaegertracing/all-in-one:1.27.0
  #   environment:
  #     - QUERY_BASE_PATH=/jaeger
  #   ports:
  #     - "5775:5775/udp"
  #     - "6831:6831/udp"
  #     - "6832:6832/udp"
  #     - "5778:5778"
  #     - "14250:14250"
  #     - "14268:14268"
  #     - "16686:16686"
  #   networks:
  #     - local

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      # - ELASTIC_PASSWORD=elastic
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - local

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.16.3
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      # - ELASTICSEARCH_USERNAME=elastic
      # - ELASTICSEARCH_PASSWORD=elastic
    ports:
      - 5601:5601
    networks:
      - local
    depends_on:
      - elasticsearch

  # # legacy apm server. this is deprecated.
  apm-server:
    container_name: apm-server
    image: docker.elastic.co/apm/apm-server:7.16.3
    ports:
      - 8200:8200
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=kibana:5601
        -E output.elasticsearch.hosts=["elasticsearch:9200"]
        -E apm-server.tls.enabled=false
    networks:
      - local
    depends_on:
      # - jaeger
      - elasticsearch
      - kibana

  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector:0.54.0
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./config/collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "13133:13133" # Health_check extension
      - "5775:5775/udp"
      - "6831:6831/udp"
    networks:
      - local
    depends_on:
      - elasticsearch
      - kibana
      - apm-server

  # Quarkus application
  hospital:
    container_name: "hospital"
    image: serrodcal/hospital:1.0.0-native-distroless
    ports: 
      - "8080:8080"
    networks:
      - local
    depends_on:
      # - jaeger
      - elasticsearch
      - kibana
      - apm-server
      - otel-collector

  # Quarkus application
  doctor:
    container_name: "doctor"
    image: serrodcal/doctor:1.0.0-native-distroless
    environment:
      - QUARKUS_HTTP_PORT=8081
    ports: 
      - "8081:8081"
    networks:
      - local
    depends_on:
      # - jaeger
      - elasticsearch
      - kibana
      - apm-server
      - otel-collector

  # Micro integrator application
  # Full deployment.toml file: https://github.com/wso2/micro-integrator/blob/8025a5c2133560c258ddade214313e79bb7ae1cd/distribution/src/resources/config-tool/deployment-full.toml
  # Enabling Prometheus: https://apim.docs.wso2.com/en/latest/observe/micro-integrator/setting-up-cloud-native-observability-in-kubernetes/#enabling-observability-for-the-micro-integrator
  # Enabling Tracing: https://apim.docs.wso2.com/en/latest/observe/micro-integrator/setting-up-cloud-native-observability-in-kubernetes/#configuring-the-micro-integrator-to-publish-tracing-information
  # Viewing Statistics: https://apim.docs.wso2.com/en/latest/observe/micro-integrator/viewing-cloud-native-observability-statistics/
  health:
    container_name: "health"
    image: wso2/wso2mi:4.1.0
    environment:
      - JAVA_OPTS=-DenableCorrelationLogs=true -DenablePrometheusApi=true -Dcom.sun.management.jmxremote.port=9010 -Dcom.sun.management.jmxremote.rmi.port=9010 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false
    volumes:
      - ./config/health/api/Health.xml:/home/wso2carbon/wso2mi-4.1.0/repository/deployment/server/synapse-configs/default/api/Health.xml
      - ./config/health/deployment.toml:/home/wso2carbon/wso2mi-4.1.0/conf/deployment.toml
      - ./config/health/log4j2.properties:/home/wso2carbon/wso2mi-4.1.0/conf/log4j2.properties
    ports: 
      - "8290:8290" # HTTP
      - "9201:9201" # Metrics
      - "9010:9010" # JMX
    networks:
      - local
    depends_on:
      # - jaeger
      - elasticsearch
      - kibana
      - apm-server
      - otel-collector
      - doctor
      - hospital

  exporter:
    container_name: "exporter"
    image: sscaling/jmx-prometheus-exporter:0.12.0
    environment:
      - CONFIG_YML=/tmp/config/config.yml
    volumes:
      - ./config/exporter/config.yml:/tmp/config/config.yml
    ports: 
      - "5556:5556"
    networks:
      - local
    depends_on:
      # - jaeger
      - elasticsearch
      - kibana 
      - apm-server
      - otel-collector
      - doctor
      - hospital
      - health
      
  prometheus:
    container_name: "prometheus"
    image: prom/prometheus:v2.30.0
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.external-url=http://localhost:9090'
    ports:
      - "9090:9090"
    networks:
      - local
    depends_on: 
      # - jaeger
      - elasticsearch
      - kibana
      - apm-server
      - otel-collector
      - doctor
      - hospital
      - health

  grafana:
    container_name: "grafana"
    image: grafana/grafana:8.1.3
    #user: "grafana"
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - ./config/grafana/dashboard.json:/var/lib/grafana/dashboards/dashboard.json
      - ./config/grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./config/grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
    networks:
      - local
    depends_on:
      # - jaeger
      - elasticsearch
      - kibana
      - apm-server
      - otel-collector
      - doctor
      - hospital
      - health
      - prometheus